version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: tachyon-postgres
    environment:
      POSTGRES_DB: tachyon_messenger
      POSTGRES_USER: tachyon_user
      POSTGRES_PASSWORD: tachyon_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - tachyon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tachyon_user -d tachyon_messenger"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: tachyon-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - tachyon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-service:
    build:
      context: .
      dockerfile: services/user/Dockerfile
    container_name: tachyon-user-service
    ports:
      - "8081:8081"
    environment:
      # Database configuration
      - DATABASE_URL=postgres://tachyon_user:tachyon_password@postgres:5432/tachyon_messenger?sslmode=disable
      
      # Redis configuration
      - REDIS_URL=redis://redis:6379
      
      # JWT configuration
      - JWT_SECRET=your-super-secret-jwt-key-here-change-in-production
      
      # Server configuration
      - USER_SERVICE_PORT=8081
      - SERVER_PORT=8081
      
      # Environment settings
      - ENVIRONMENT=development
      - GIN_MODE=debug
      
      # Logging
      - LOG_LEVEL=info
      - LOG_FORMAT=json
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - tachyon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      start_period: 40s
      retries: 3
    volumes:
      # Mount logs directory for development
      - ./logs:/app/logs
    labels:
      - "com.tachyon.service=user-service"
      - "com.tachyon.version=1.0.0"
      - "com.tachyon.description=Tachyon User Management Service"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  tachyon-network:
    driver: bridge
    name: tachyon-network