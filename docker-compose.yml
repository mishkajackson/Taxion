version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: tachyon-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-tachyon_messenger}
      POSTGRES_USER: ${POSTGRES_USER:-tachyon_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-tachyon_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - tachyon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-tachyon_user} -d ${POSTGRES_DB:-tachyon_messenger}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: tachyon-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - tachyon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # User Service
  user-service:
    build:
      context: .
      dockerfile: services/user/Dockerfile
    container_name: tachyon-user-service
    ports:
      - "${USER_SERVICE_PORT:-8081}:8081"
    env_file:
      - .env
    environment:
      # Override specific values if needed
      - SERVER_PORT=8081
      - USER_SERVICE_PORT=8081
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - GIN_MODE=${GIN_MODE:-debug}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - tachyon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      start_period: 40s
      retries: 3
    volumes:
      - ./logs:/app/logs
    labels:
      - "com.tachyon.service=user-service"
      - "com.tachyon.version=1.0.0"
      - "com.tachyon.description=Tachyon User Management Service"

  # Chat Service
  chat-service:
    build:
      context: .
      dockerfile: services/chat/Dockerfile
    container_name: tachyon-chat-service
    ports:
      - "${CHAT_SERVICE_PORT:-8082}:8082"
    env_file:
      - .env
    environment:
      # Override specific values if needed
      - SERVER_PORT=8082
      - CHAT_SERVICE_PORT=8082
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - GIN_MODE=${GIN_MODE:-debug}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      user-service:
        condition: service_healthy
    networks:
      - tachyon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      start_period: 40s
      retries: 3
    volumes:
      - ./logs:/app/logs
    labels:
      - "com.tachyon.service=chat-service"
      - "com.tachyon.version=1.0.0"
      - "com.tachyon.description=Tachyon Chat Service with WebSocket"

  # Task Service
  task-service:
    build:
      context: .
      dockerfile: services/task/Dockerfile
    container_name: tachyon-task-service
    ports:
      - "${TASK_SERVICE_PORT:-8083}:8083"
    env_file:
      - .env
    environment:
      # Override specific values if needed
      - SERVER_PORT=8083
      - TASK_SERVICE_PORT=8083
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - GIN_MODE=${GIN_MODE:-debug}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - tachyon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      start_period: 40s
      retries: 3
    volumes:
      - ./logs:/app/logs
    labels:
      - "com.tachyon.service=task-service"
      - "com.tachyon.version=1.0.0"
      - "com.tachyon.description=Tachyon Task Management Service"
  
  # Calendar Service
  calendar-service:
    build:
      context: .
      dockerfile: services/calendar/Dockerfile
    container_name: tachyon-calendar-service
    ports:
      - "${CALENDAR_SERVICE_PORT:-8084}:8084"
    env_file:
      - .env
    environment:
      # Override specific values if needed
      - SERVER_PORT=8084
      - CALENDAR_SERVICE_PORT=8084
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - GIN_MODE=${GIN_MODE:-debug}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - tachyon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8084/health"]
      interval: 30s
      timeout: 10s
      start_period: 40s
      retries: 3
    volumes:
      - ./logs:/app/logs
    labels:
      - "com.tachyon.service=calendar-service"
      - "com.tachyon.version=1.0.0"
      - "com.tachyon.description=Tachyon Calendar Service"
  
   # Poll Service
  poll-service:
    build:
      context: .
      dockerfile: services/poll/Dockerfile
    container_name: tachyon-poll-service
    ports:
      - "${POLL_SERVICE_PORT:-8085}:8085"
    env_file:
      - .env
    environment:
      # Override specific values if needed
      - SERVER_PORT=8085
      - POLL_SERVICE_PORT=8085
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - GIN_MODE=${GIN_MODE:-debug}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - tachyon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8085/health"]
      interval: 30s
      timeout: 10s
      start_period: 40s
      retries: 3
    volumes:
      - ./logs:/app/logs
    labels:
      - "com.tachyon.service=poll-service"
      - "com.tachyon.version=1.0.0"
      - "com.tachyon.description=Tachyon Poll Service"

  # Gateway Service (Reverse Proxy)
  gateway:
    build:
      context: .
      dockerfile: services/gateway/Dockerfile
    container_name: tachyon-gateway
    ports:
      - "${GATEWAY_PORT:-8080}:8080"
    env_file:
      - .env
    environment:
      # Service URLs - используем внутренние Docker имена сервисов
      - USER_SERVICE_URL=http://user-service:8081
      - CHAT_SERVICE_URL=http://chat-service:8082
      
      # Override specific values if needed
      - SERVER_PORT=8080
      - GATEWAY_PORT=8080
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - GIN_MODE=${GIN_MODE:-debug}
    depends_on:
      user-service:
        condition: service_healthy
      chat-service:
        condition: service_healthy
    networks:
      - tachyon-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      start_period: 30s
      retries: 3
    labels:
      - "com.tachyon.service=gateway"
      - "com.tachyon.version=1.0.0"
      - "com.tachyon.description=Tachyon API Gateway"

volumes:
  postgres_data:
    driver: local
    name: tachyon_postgres_data
  redis_data:
    driver: local
    name: tachyon_redis_data

networks:
  tachyon-network:
    driver: bridge
    name: tachyon-network
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16